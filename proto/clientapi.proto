syntax = "proto3";

package clientapi;

message CreateKeyRequest {
    string keyid = 1;
}

message CreateKeyResponse {}

message GetKeyRequest {
    string keyid = 1;
}
message GetKeyResponse {
    bytes key = 1;
}

message DeleteKeyRequest {
    string keyid = 1;
}
message DeleteKeyResponse {}

message SetOpaPolicyRequest {
    bytes name = 1;
    bytes content = 2;
}
message SetOpaPolicyResponse {
    bytes status = 1;
}

message SetOpaReferenceRequest {
    bytes name = 1;
    bytes content = 2;
}
message SetOpaReferenceResponse {
    bytes status = 1;
}

message ExportOpaPolicyRequest {
    bytes name = 1;
}
message ExportOpaPolicyResponse {
    bytes status = 1;
    bytes content = 2;
}

message ExportOpaReferenceRequest {
    bytes name = 1;
}
message ExportOpaReferenceResponse {
    bytes status = 1;
    bytes content = 2;
}

message TestOpaRequest {
    bytes policyname = 1;
    bytes policycontent = 2;
    bool policylocal = 3;
    bytes referencename = 4;
    bytes referencecontent = 5;
    bool referencelocal = 6;
    bytes input = 7;
}
message TestOpaResponse {
    bytes status = 1;
}

message SetResourceRequest {
    string resource_id = 1;
    bytes content = 2;
}

message SetResourceResponse {}

message GetResourceRequest {
    string resource_id = 1;
}

message GetResourceResponse {
    bytes content = 1;
}

service KeyManagerService {
    rpc CreateKey(CreateKeyRequest) returns (CreateKeyResponse) {};
    rpc GetKey(GetKeyRequest) returns (GetKeyResponse) {};
    rpc DeleteKey(DeleteKeyRequest) returns (DeleteKeyResponse) {};
}

service OpaService {
    rpc SetOpaPolicy(SetOpaPolicyRequest) returns (SetOpaPolicyResponse) {};
    rpc exportOpaPolicy(ExportOpaPolicyRequest) returns (ExportOpaPolicyResponse) {};
    rpc setOpaReference(SetOpaReferenceRequest) returns (SetOpaReferenceResponse) {};
    rpc exportOpaReference(ExportOpaReferenceRequest) returns (ExportOpaReferenceResponse) {};
    rpc TestOpa(TestOpaRequest) returns (TestOpaResponse) {};
}

service ResourceService {
    rpc SetResource(SetResourceRequest) returns (SetResourceResponse) {};
    rpc GetResource(GetResourceRequest) returns (GetResourceResponse) {};
}
